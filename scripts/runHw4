#!/bin/bash

if [[ $HOSTNAME == *"elgato"* ]]; then
echo "Running on elgato!"
SUFFIX="_b"
else
SUFFIX=""
fi


PROJ_1="subHw4"
PROJ_2="mean_filter"

RUNSC1="subHw4$SUFFIX"
RUNSC2="sub_mean$SUFFIX"

ERR_OUT1="hw4.e"
CONS_OUT1="hw4.o"

SCENARIOS="1"

FAILED_SCENARIOS=false
#parse command line args
if [[ $@ != "" ]]; then
   SCENARIOS=$@
fi

echo "SCENARIOS set to $SCENARIOS"

for SCENARIO in $SCENARIOS; do
   #set the arguemnts for the scenario
   case $SCENARIO in
      1)
         PROJECT=$PROJ_1
         RUNSCRIPT=$RUNSC1
         ERR_OUTPUT_FILE=$ERR_OUT1
         CONS_OUTPUT_FILE=$CONS_OUT1
         ;;
      2)
         PROJECT=$PROJ_2
         RUNSCRIPT=$RUNSC2
         ERR_OUTPUT_FILE=$ERR_OUT2
         CONS_OUTPUT_FILE=$CONS_OUT2
         ;;
      *)
        echo "solution $SCENARIO does not exist. Exiting"
        exit 1
        ;;
   esac

   for FILE in   $ERR_OUTPUT_FILE* $CONS_OUTPUT_FILE*; do
      if [ -e $FILE ]; then
         rm $FILE
      fi
   done
   #set the output directory
   #OUT_DIR=$PROJECT\_out_`date +%Y%m%d`

   #loop through the data sets
   for RUN in 1; do 
      echo "-------------------------"
      echo "$PROJECT::$RUN"
      
      
      #submit the job to the queue
      if [[ $HOSTNAME == *"elgato"* ]]; then
         bsub < $RUNSCRIPT.sh
      else
         qsub $RUNSCRIPT.sh
      fi
      echo "-------------------------"
      
      sleep 1;
      
      while [[ `qstat -a -s -u $USER` != "" ]]; do
         qstat -a -s -u $USER
         echo
         sleep 1
      done
      
      OUTPUT_DIR=`ls -lrt ../outputs/ | tail -1 | awk '{print $9}'`
      echo "Output_Dir:  ../outputs/$OUTPUT_DIR"
      mv $ERR_OUTPUT_FILE* $CONS_OUTPUT_FILE* ../outputs/$OUTPUT_DIR
      ./printTimes.sh $OUTPUT_DIR
      
   done #end of data set

done #end of scneario

